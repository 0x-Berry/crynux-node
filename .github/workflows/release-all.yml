# Build the binary release version for Mac

name: Release Crynux Node using the tag name

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    tags:
      - '*'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  build-the-mac-binary:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install the Apple certificate
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Build
        run: ./build/macos/build.sh -s ${{ secrets.APPLE_DEVELOPER_IDENTITY }} -u ${{ secrets.APPLE_USER }} -p ${{ secrets.APPLE_PASS }} -t ${{ secrets.APPLE_TEAM_ID }}

      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: mac-app
          path: build/crynux_node/dist/crynux-node-helium-${{ github.ref_name }}-mac-arm64-signed.dmg

  build-the-windows-binary:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run the build script
        run: ./build/windows/build.ps1

      - id: gdrive
        name: Upload to gdrive
        uses: hoatruongdev09/google-drive-file-upload-github-action@v1.1
        with:
          service-account-json: ${{ secrets.GOOGLE_DRIVE_GSA_CREDENTIALS_BASE64 }}
          file-path: "build/crynux_node/dist/crynux-node-helium-${{ github.ref_name }}-windows-x64.zip"
          upload-name: "crynux-node-helium-${{ github.ref_name }}-windows-x64.zip"
          upload-to-folder-id: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
          overwrite: true
    outputs:
      google-drive-link-content: ${{ steps.gdrive.outputs.web-content-link }}
      google-drive-link-view: ${{ steps.gdrive.outputs.web-view-link }}

  build-the-linux-binary:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run the build script
        run: ./build/linux-server/build.sh

      - id: gdrive
        name: Upload to gdrive
        uses: hoatruongdev09/google-drive-file-upload-github-action@v1.1
        with:
          service-account-json: ${{ secrets.GOOGLE_DRIVE_GSA_CREDENTIALS_BASE64 }}
          file-path: "build/crynux_node/dist/crynux-node-helium-${{ github.ref_name }}-windows-x64.zip"
          upload-name: "crynux-node-helium-${{ github.ref_name }}-linux-bin-x64.tar.gz"
          upload-to-folder-id: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
          overwrite: true
    outputs:
      google-drive-link-content: ${{ steps.gdrive.outputs.web-content-link }}
      google-drive-link-view: ${{ steps.gdrive.outputs.web-view-link }}

  publish-release:
    runs-on: ubuntu-22.04
    needs:
      - build-the-linux-binary
      - build-the-windows-binary
      - build-the-mac-binary
    steps:
      - name: Print the Google Drive links
        run: |
          echo "windows content link: ${needs.build-the-windows-binary.google-drive-link-content}"
          echo "windows view link: ${needs.build-the-windows-binary.google-drive-link-view}"
          echo "linux content link: ${needs.build-the-linux-binary.google-drive-link-content}"
          echo "linux view link: ${needs.build-the-linux-binary.google-drive-link-view}"

      - name: Download mac app
        uses: actions/download-artifact@v4
        with:
          name: mac-app

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: crynux-node-helium-${{ github.ref_name }}-mac-arm64-signed.dmg
